package tdd;

import static org.testng.Assert.assertTrue;

import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import base.BasePage;
import base.BrowserManager;
import base.CommonUtilities;
import base.EnvironmentManager;
import pages.HomePage;

public class TestCases extends BasePage{

	int numbers [] = {1,2,3,4,5,6,7,8,9,10};

	//@BeforeMethod(alwaysRun=true)
	public void startSession() 
	{
		instanceOf(BrowserManager.class).getBrowserType();
		instanceOf(EnvironmentManager.class).getEnvironmentType();
	}

	//@AfterMethod(alwaysRun=true)
	public void endSession(ITestResult result) 
	{
		if(ITestResult.SUCCESS==result.getStatus()) 
		{
			instanceOf(CommonUtilities.class).takeScreenshot();
			System.out.println("Test Passed");
		}
		else if(ITestResult.FAILURE==result.getStatus()) 
		{
			instanceOf(CommonUtilities.class).takeScreenshot();
			System.out.println("Test Failed");
		}
		instanceOf(CommonUtilities.class).closeBrowser();
	}

	//@Test
	public void verifyHomePageLoadsSuccessfully()
	{
		instanceOf(HomePage.class).verifyUserIsOnHomePage();
	}

	//@Test(dependsOnMethods="verifyHomePageLoadsSuccessfully")
	public void verifyFounderIsVisible()
	{
		instanceOf(HomePage.class).isFounderVisible();
	}

	@Test
	public void printNumbers() 
	{
		//print the numbers 1,2,3,4,5,6,7,8,9,10
		for(int number : numbers)
		{
            System.out.println(number);
        }	
	}
	
	@Test
	public void testPrintedNumbers() 
	{
		//Should return true
		System.out.println((numbers[0]==1 || numbers[9]==10));
		
		//Should return false
	    System.out.println((numbers[0]==0 || numbers.length -1==10));
	    
	    assertTrue(numbers[0]==1);
	    assertTrue(numbers[1]==2);
	    assertTrue(numbers[2]==3);
	    assertTrue(numbers[3]==4);
	    assertTrue(numbers[4]==5);
	    assertTrue(numbers[5]==6);
	    assertTrue(numbers[6]==7);
	    assertTrue(numbers[7]==8);
	    assertTrue(numbers[8]==9);
	    assertTrue(numbers[9]==10);
	    
	}
		
		
		

		
	
}
